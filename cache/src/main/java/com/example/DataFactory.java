package com.example;

import java.util.Arrays;

/**
 * Created by wxc on 2016/11/8.
 */

public class DataFactory {
    public static void main(String[] args) {
        short[] datas = new short[288];
        for(int i=0;i<288;i++) {
            if(i<72) {
                datas[i] = (short) (100d * Math.sin(Math.PI * 4 * i / 288));
            } else if(i<144) {
                datas[i] = (short) (10000d * Math.sin(Math.PI * 4 * i / 288));
            } else if(i<216) {
                datas[i] = (short) (1000d * Math.sin(Math.PI * 4 * i / 288));
            } else {
                datas[i] = (short) (5000d * Math.sin(Math.PI * 4 * i / 288));
            }
        }
        System.out.println(Arrays.toString(datas));
    }

    static short[] data = new short[]{224, 226, 226, 224, 224, 226, 227, 224, 220, 222, 237, 262, 293, 327, 364, 409, 459, 506, 547, 577, 603, 625, 644, 656, 664, 669, 673, 676, 676, 675, 675, 673, 667, 653, 634, 613, 591, 567, 539, 510, 481, 451, 418, 379, 337, 295, 254, 211, 165, 119, 81, 56, 41, 29, 18, 13, 15, 24, 33, 38, 40, 41, 42, 43, 42, 39, 38, 39, 42, 46, 47, 47, 46, 45, 45, 47, 51, 54, 56, 57, 58, 58, 59, 58, 59, 65, 71, 74, 77, 93, 124, 152, 156, 131, 97, 65, 19, -65, -170, -229, -177, -11, 210, 443, 710, 1067, 1523, 2008, 2440, 2805, 3158, 3539, 3896, 4104, 4127, 3983, 3781, 3560, 3263, 2824, 2263, 1680, 1161, 703, 251, -199, -583, -830, -942, -984, -1005, -995, -919, -784, -644, -550, -508, -487, -462, -439, -433, -451, -481, -514, -542, -556, -550, -516, -464, -413, -378, -364, -370, -387, -404, -409, -397, -371, -339, -312, -295, -289, -289, -291, -290, -284, -271, -252, -228, -207, -194, -188, -185, -179, -168, -155, -144, -133, -116, -97, -78, -64, -55, -46, -34, -20, -6, 6, 16, 23, 30, 40, 55, 73, 89, 100, 109, 121, 138, 153, 162, 166, 173, 185, 199, 211, 220, 230, 245, 264, 283, 303, 320, 335, 351, 368, 383, 396, 405, 412, 422, 438, 458, 479, 499, 522, 550, 582, 615, 647, 675, 700, 723, 743, 763, 785, 806, 820, 822, 815, 804, 793, 779, 757, 723, 684, 650, 626, 607, 586, 566, 552, 546, 535, 507, 458, 400, 339, 275, 200, 110, 17, -64, -126, -171, -208, -241, -272, -298, -318, -330, -337, -342, -349, -355, -359, -356, -346, -334, -322, -310, -297, -288, -283, -280, -275, -267, -259};
    static short[] data2 = new short[]{0, 43, 87, 130, 173, 216, 258, 300, 342,
            382, 422, 461, 499, 537, 573, 608, 642, 675, 707, 737, 766,
            793, 819, 843, 866, 887, 906, 923, 939, 953, 965, 976, 984,
            991, 996, 999, 1000, 999, 996, 991, 984, 976, 965, 953, 939,
            923, 906, 887, 866, 843, 819, 793, 766, 737, 707, 675, 642,
            608, 573, 537, 500, 461, 422, 382, 342, 300, 258, 216, 173,
            130, 87, 43, 0, -43, -87, -130, -173, -216, -258, -300, -342,
            -382, -422, -461, -500, -537, -573, -608, -642, -675, -707, -737,
            -766, -793, -819, -843, -866, -887, -906, -923, -939, -953, -965,
            -976, -984, -991, -996, -999, -1000, -999, -996, -991, -984, -976,
            -965, -953, -939, -923, -906, -887, -866, -843, -819, -793, -766,
            -737, -707, -675, -642, -608, -573, -537, -499, -461, -422, -382,
            -342, -300, -258, -216, -173, -130, -87, -43, 0, 43, 87, 130, 173,
            216, 258, 300, 342, 382, 422, 461, 499, 537, 573, 608, 642, 675,
            707, 737, 766, 793, 819, 843, 866, 887, 906, 923, 939, 953, 965,
            976, 984, 991, 996, 999, 1000, 999, 996, 991, 984, 976, 965, 953,
            939, 923, 906, 887, 866, 843, 819, 793, 766, 737, 707, 675, 642,
            608, 573, 537, 499, 461, 422, 382, 342, 300, 258, 216, 173, 130,
            87, 43, 0, -43, -87, -130, -173, -216, -258, -300, -342, -382, -422,
            -461, -499, -537, -573, -608, -642, -675, -707, -737, -766, -793, -819,
            -843, -866, -887, -906, -923, -939, -953, -965, -976, -984, -991, -996,
            -999, -1000, -999, -996, -991, -984, -976, -965, -953, -939, -923, -906,
            -887, -866, -843, -819, -793, -766, -737, -707, -675, -642, -608, -573,
            -537, -499, -461, -422, -382, -342, -300, -258, -216, -173, -130, -87, -43};

    static short[] getPacket(int sequenceId) {
        short[] result = new short[9];
        for(int i=0; i<9; i++) {
            result[i] = data[32*i + sequenceId];
        }
        return result;
    }
    static Packet getEcgPacket(int sequenceId) {
        short[] result = new short[9];
        for(int i=0; i<9; i++) {
            result[i] = data[32*i + sequenceId];
        }
        Packet packet = new Packet();
        packet.data = result;
        packet.sequenceID = sequenceId;
        return packet;
    }
    static class Packet {
        int sequenceID;
        short[] data;
    }
}
